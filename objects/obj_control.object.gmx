<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar map;

mapWidth = room_width/GRID_SIZE;
mapHeight = room_height/GRID_SIZE;

//Create node
for(i =0; i &lt; mapWidth; i++){
    for(j = 0; j &lt; mapHeight; j++){
        map[i,j] = instance_create(i * GRID_SIZE,j * GRID_SIZE, obj_Node);
    }
}

//Populate neighbor lists
for(i =0; i &lt; mapWidth; i++){
    for(j = 0; j &lt; mapHeight; j++){
        node = map[i,j];
        
        //Add left neighbor
        if(i &gt; 0){
            ds_list_add(node.neighbors, map[i-1,j]);
        }
        
         //Add right neighbor
        if(i &lt; mapWidth - 1){
            ds_list_add(node.neighbors, map[i+1,j]);
        }
        
         //Add top neighbor
        if(j &gt; 0){
            ds_list_add(node.neighbors, map[i,j-1]);
        }
        
         //Add bottom neighbor
        if(j &lt; mapHeight - 1){
            ds_list_add(node.neighbors, map[i,j+1]);
        }
        
        //Top left neighbor
        if(i &gt; 0 &amp;&amp; j &gt; 0){
            ds_list_add(node.neighbors, map[i - 1, j - 1]);
        }
        
        //Top right neighbor
        if(i &lt; mapWidth - 1 &amp;&amp; j &gt; 0){
            ds_list_add(node.neighbors, map[i + 1, j - 1]);
        }
        
        //Bottom left neighbor
        if(i &gt; 0 &amp;&amp; j &lt; mapHeight - 1){
            ds_list_add(node.neighbors, map[i - 1, j + 1]);
        }
        
        //Bottom right neighbor
        if(i &lt; mapWidth - 1 &amp;&amp; j &lt; mapHeight - 1){
            ds_list_add(node.neighbors, map[i + 1, j + 1]);
        }
        
    }
}

instance_create(x, y, obj_cursor);

with(instance_create(5 * GRID_SIZE, 5 * GRID_SIZE, obj_hero)){
    gridX = 5;
    gridY = 5;
    name = "Alpha";
    map[gridX, gridY].occupant = id;
}

with(instance_create(5 * GRID_SIZE, 8 * GRID_SIZE, obj_hero)){
    gridX = 5;
    gridY = 8;
    name = "Beta";
    map[gridX, gridY].occupant = id;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
